{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('#startBtn');\nconst inputDate = document.querySelector('#datetime-picker');\ninputDate.disabled = false;\nconst span = document.querySelectorAll('.value');\nlet timer = 0;\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addZero(num) {\n  return num.toString().padStart(2, '0');\n}\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  inputDate.disabled = true;\n  const intervalId = setInterval(() => {\n    const time = convertMs(timer);\n    if (timer <= 0) {\n      clearInterval(intervalId);\n      inputDate.disabled = false;\n    } else {\n      timer -= 1000;\n      const arrTime = Object.values(time);\n      for (let i = 0; i <= arrTime.length - 1; i++) {\n        span[i].textContent = addZero(arrTime[i]);\n      }\n    }\n  }, 1000);\n});\n\nconst onClose = selectedDates => {\n  console.log(selectedDates[0]);\n  const newDate = new Date().getTime();\n  if (selectedDates[0].getTime() > newDate) {\n    startBtn.disabled = false;\n    timer = selectedDates[0].getTime() - newDate;\n  } else {\n    startBtn.disabled = true;\n    iziToast.error({\n      position: 'topRight',\n      message: 'Please choose a date in the future',\n    });\n  }\n};\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose,\n};\n\nflatpickr('#datetime-picker', options);\n// import flatpickr from 'flatpickr';\n// import 'flatpickr/dist/flatpickr.min.css';\n// import iziToast from 'izitoast';\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// const startBtn = document.querySelector('#startBtn');\n// const inputDate = document.querySelector('#datetime-picker');\n// inputDate.disabled = false;\n\n// function convertMs(ms) {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return { days, hours, minutes, seconds };\n// }\n\n// function addZero(num) {\n//   return num.toString().padStart(2, '0');\n// }\n\n// let timer = 0;\n\n// const onClose = selectedDates => {\n//   console.log(selectedDates[0]);\n//   const newDate = new Date().getTime();\n//   if (selectedDates[0].getTime() > newDate) {\n//     startBtn.disabled = false;\n//     timer = selectedDates[0].getTime() - newDate;\n//   } else {\n//     iziToast.error({\n//       position: 'topRight',\n//       message: 'Please choose a date in the future',\n//     });\n//   }\n// };\n\n// startBtn.addEventListener('click', () => {\n//   startBtn.disabled = true;\n//   inputDate.disabled = true;\n//   const span = document.querySelectorAll('.value');\n  \n//   const intervalId = setInterval(() => {\n//     const time = convertMs(timer);\n//     if (timer <= 0) {\n//       clearInterval(intervalId);\n//     } else {\n//       timer -= 1000;\n//       const arrTime = Object.values(time);\n//       for (let i = 0; i < arrTime.length; i++) {\n//         span[i].textContent = addZero(arrTime[i]);\n//       }\n//     }\n//   }, 1000);\n// });\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose,\n// };\n\n// flatpickr('#datetime-picker', options);\n"],"names":["startBtn","inputDate","span","timer","convertMs","ms","days","hours","minutes","seconds","addZero","num","intervalId","time","arrTime","i","onClose","selectedDates","newDate","iziToast","options","flatpickr"],"mappings":"2GAKA,MAAMA,EAAW,SAAS,cAAc,WAAW,EAC7CC,EAAY,SAAS,cAAc,kBAAkB,EAC3DA,EAAU,SAAW,GACrB,MAAMC,EAAO,SAAS,iBAAiB,QAAQ,EAC/C,IAAIC,EAAQ,EACZ,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAQC,EAAK,CACpB,OAAOA,EAAI,SAAU,EAAC,SAAS,EAAG,GAAG,CACvC,CAEAX,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAU,SAAW,GACrB,MAAMW,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAOT,EAAUD,CAAK,EAC5B,GAAIA,GAAS,EACX,cAAcS,CAAU,EACxBX,EAAU,SAAW,OAChB,CACLE,GAAS,IACT,MAAMW,EAAU,OAAO,OAAOD,CAAI,EAClC,QAASE,EAAI,EAAGA,GAAKD,EAAQ,OAAS,EAAGC,IACvCb,EAAKa,CAAC,EAAE,YAAcL,EAAQI,EAAQC,CAAC,CAAC,CAE3C,CACF,EAAE,GAAI,CACT,CAAC,EAED,MAAMC,EAAUC,GAAiB,CAC/B,QAAQ,IAAIA,EAAc,CAAC,CAAC,EAC5B,MAAMC,EAAU,IAAI,KAAM,EAAC,QAAO,EAC9BD,EAAc,CAAC,EAAE,QAAO,EAAKC,GAC/BlB,EAAS,SAAW,GACpBG,EAAQc,EAAc,CAAC,EAAE,QAAO,EAAKC,IAErClB,EAAS,SAAW,GACpBmB,EAAS,MAAM,CACb,SAAU,WACV,QAAS,oCACf,CAAK,EAEL,EAEMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAAJ,CACF,EAEAK,EAAU,mBAAoBD,CAAO"}