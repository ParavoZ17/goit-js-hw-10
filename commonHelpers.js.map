{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst startBtn = document.querySelector('#startBtn');\nconst inputDate = document.querySelector('#datetime-picker');\ninputDate.disabled = false;\nconst span = document.querySelectorAll('.value');\nlet timer = 0;\nlet selectedDate =0;\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addZero(num) {\n  return num.toString().padStart(2, '0');\n}\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  inputDate.disabled = true;\n  const intervalId = setInterval(() => {\n    const newDate = new Date().getTime();\n    if (selectedDate > newDate){\n    \n    timer = selectedDate - newDate;\n    const time = convertMs(timer);\n    if (timer <= 0) {\n      clearInterval(intervalId);\n      inputDate.disabled = false;\n    } else {\n      timer -= 1000;\n      const arrTime = Object.values(time);\n      for (let i = 0; i <= arrTime.length - 1; i++) {\n        span[i].textContent = addZero(arrTime[i]);\n      }\n    }\n } else {\n  startBtn.disabled = true;\n  inputDate.disabled = false;\n  inputDate.value ='';\n }\n }, 1000);\n});\n\nconst onClose = selectedDates => {\n  console.log(selectedDates[0]);\n  if (selectedDates[0].getTime() > new Date().getTime()) {\n    startBtn.disabled = false;\n    selectedDate = selectedDates[0].getTime();\n  } else {\n    startBtn.disabled = true;\n    iziToast.error({\n      position: 'topRight',\n      message: 'Please choose a date in the future',\n    });\n  }\n};\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose,\n};\n\nflatpickr('#datetime-picker', options);\n"],"names":["startBtn","inputDate","span","timer","selectedDate","convertMs","ms","days","hours","minutes","seconds","addZero","num","intervalId","newDate","time","arrTime","i","onClose","selectedDates","iziToast","options","flatpickr"],"mappings":"sGAKA,MAAMA,EAAW,SAAS,cAAc,WAAW,EAC7CC,EAAY,SAAS,cAAc,kBAAkB,EAC3DA,EAAU,SAAW,GACrB,MAAMC,EAAO,SAAS,iBAAiB,QAAQ,EAC/C,IAAIC,EAAQ,EACRC,EAAc,EAClB,SAASC,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAQC,EAAK,CACpB,OAAOA,EAAI,SAAU,EAAC,SAAS,EAAG,GAAG,CACvC,CAEAZ,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBC,EAAU,SAAW,GACrB,MAAMY,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAU,IAAI,KAAM,EAAC,QAAO,EAClC,GAAIV,EAAeU,EAAQ,CAE3BX,EAAQC,EAAeU,EACvB,MAAMC,EAAOV,EAAUF,CAAK,EAC5B,GAAIA,GAAS,EACX,cAAcU,CAAU,EACxBZ,EAAU,SAAW,OAChB,CACLE,GAAS,IACT,MAAMa,EAAU,OAAO,OAAOD,CAAI,EAClC,QAASE,EAAI,EAAGA,GAAKD,EAAQ,OAAS,EAAGC,IACvCf,EAAKe,CAAC,EAAE,YAAcN,EAAQK,EAAQC,CAAC,CAAC,CAE3C,CACL,MACEjB,EAAS,SAAW,GACpBC,EAAU,SAAW,GACrBA,EAAU,MAAO,EAEjB,EAAE,GAAI,CACR,CAAC,EAED,MAAMiB,EAAUC,GAAiB,CAC/B,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxBA,EAAc,CAAC,EAAE,QAAS,EAAG,IAAI,KAAI,EAAG,WAC1CnB,EAAS,SAAW,GACpBI,EAAee,EAAc,CAAC,EAAE,QAAO,IAEvCnB,EAAS,SAAW,GACpBoB,EAAS,MAAM,CACb,SAAU,WACV,QAAS,oCACf,CAAK,EAEL,EAEMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAAH,CACF,EAEAI,EAAU,mBAAoBD,CAAO"}